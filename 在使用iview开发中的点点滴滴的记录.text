在iview中event是全局变量
     event.preventDefault();
     event.stopPropagation();

:not(:last-child) 不选择最后一个

在JQ $.ajax提交方式(拼接)可以使用$.parm(data)

在iview中添加enter点击事件
    @keyup.enter.native = 'handleSubmit()'

vue+webpack中动态绑定图片路径的2种方法:
    <img :src ="imgSrc">
    data(){
        return {
            imgSrc:'...' //1
            imgSrc:require('...') //2
        }
    }

在开发中遇到的跳转传值(使用vuex传值)问题(数据)
    传:this.$router.push({
        path:"...",
        query:{
            data:data
        }
    })
    取:data = this.$router.query.data
    传:this.$store.state.data = data;
    取:d = atathis.$store.state.data 
    从后台拿到数据之后 {} 不一样可以使用
        $.each(data,()=>{})
    这个数据在其他地方调用 可以采用 {}[] 方式
        实例: 
            data : {},
        存:  data[id] = data;
        取:  data[id]
    开发中的跳转:
        <router-link to="/mattersDirectory"></router-link>
        this.$router.push('/myLogin');
        window.location.href = '/myLogin'
        window.open('/myLogin')
        
JQ中对于$符号的理解
    $ 实际上就是一个函数 function